{"version":3,"sources":["resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["AppBanner","className","src","avengers","alt","avengersLogo","setContent","process","Component","newItemLoading","ErrorMessage","Error","ComicsList","props","useState","comics","setComics","offset","setOffset","setNewItemLoading","comicsEnded","setComicsEnded","useMarvelService","getAllComics","loading","error","setProcess","useEffect","onRequest","initial","then","res","onAllComics","newComicsList","ended","length","newSpinner","arr","comicsItems","map","item","i","to","id","href","thumbnail","title","price","renderItems","disabled","style","onClick","ComicsPage","Helmet","name","content","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"gKAAe,MAA0B,qCCA1B,MAA0B,0C,OCiB1BA,EAbG,WACd,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAKC,IAAKC,EAAUC,IAAI,aACxB,sBAAKH,UAAU,mBAAf,iKACgC,uBADhC,yGAIA,qBAAKC,IAAKG,EAAcD,IAAI,sB,gECLlCE,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAQF,GACJ,IAAK,UACD,OAAO,cAAC,IAAD,IACX,IAAK,UACD,OAAOE,EAAiB,cAACD,EAAD,IAAe,cAAC,IAAD,IAC3C,IAAK,YACD,OAAO,cAACA,EAAD,IACX,IAAK,QACD,OAAO,cAACE,EAAA,EAAD,IACX,QACI,MAAM,IAAIC,MAAM,8BA8EbC,EAzEI,SAACC,GAEhB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4CJ,oBAAS,GAArD,mBAAOL,EAAP,KAAuBU,EAAvB,KACA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KAEA,EAA4DC,cAArCC,GAAvB,EAAOC,QAAP,EAAgBC,MAAhB,EAAuBF,cAAchB,EAArC,EAAqCA,QAASmB,EAA9C,EAA8CA,WAE9CC,qBAAU,WACNC,EAAUX,GAAQ,KACnB,IAEH,IAAMW,EAAY,SAACX,EAAQY,GACbV,GAAVU,GACAN,EAAaN,GACRa,MAAK,SAAAC,GACFC,EAAYD,MAEfD,MAAK,WACFJ,EAAW,iBAIjBM,EAAc,SAACC,GACjB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAEZlB,EAAU,GAAD,mBAAKD,GAAL,YAAgBkB,KACzBd,GAAkB,SAAAV,GAAc,OAAI,KACpCS,EAAUD,EAAS,GACnBI,EAAea,IAwBnB,IAAME,EAAa3B,EAAiB,cAAC,IAAD,IAAa,KAEjD,OACI,sBAAKR,UAAU,eAAf,UACKK,EAAWC,GAAS,kBAzB7B,SAAqB8B,GACjB,IAAMC,EAAcD,EAAIE,KAAI,SAACC,EAAMC,GAC/B,OACI,oBAAYxC,UAAU,eAAtB,SACI,eAAC,IAAD,CAAMyC,GAAE,kBAAaF,EAAKG,IAAMC,KAAK,IAArC,UACI,qBAAK1C,IAAKsC,EAAKK,UAAWzC,IAAKoC,EAAKM,MAAO7C,UAAU,qBACrD,qBAAKA,UAAU,oBAAf,SAAoCuC,EAAKM,QACzC,sBAAK7C,UAAU,qBAAf,UAAqCuC,EAAKO,MAA1C,WAJCN,MAUjB,OACI,oBAAIxC,UAAU,eAAd,SACKqC,IAUsBU,CAAYjC,KAASN,GAChD,wBAAQR,UAAU,mCACVgD,SAAUxC,EACVyC,MAAO,CAAC,QAAW9B,EAAc,OAAS,SAC1C+B,QAAS,kBAAMvB,EAAUX,IAHjC,SAKI,qBAAKhB,UAAU,QAAf,yBAEHmC,M,QCrEEgB,UAjBI,WAEf,OACI,qCACI,eAACC,EAAA,EAAD,WACI,sBACIC,KAAK,cACLC,QAAQ,uBAEZ,0DAEJ,cAAC,EAAD,IACA,cAAC,EAAD,S,0FCbG,SAASC,EAAmBnB,GACzC,OCJa,SAA4BA,GACzC,GAAIoB,MAAMC,QAAQrB,GAAM,OAAO,OAAAsB,EAAA,GAAiBtB,GDGzC,CAAkBA,IELZ,SAA0BuB,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBvB,IAAQ,OAAA4B,EAAA,GAA2B5B,IGLvE,WACb,MAAM,IAAI6B,UAAU,wIHIwE","file":"static/js/5.51930449.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                Новые комиксы каждую неделю!<br/>\n                Оставайтесь с нами!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import './comicsList.scss';\nimport useMarvelService from \"../../services/MarvelService\";\nimport {useState, useEffect} from \"react\";\nimport Spinner from \"../spinner/spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport {Link} from \"react-router-dom\";\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default:\n            throw new Error('Unexpected process state')\n    }\n}\n\n\nconst ComicsList = (props) => {\n\n    const [comics, setComics] = useState([]);\n    const [offset, setOffset] = useState(0);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(res => {\n                onAllComics(res);\n            })\n            .then(() => {\n                setProcess('confirmed')\n            })\n    }\n\n    const onAllComics = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComics([...comics, ...newComicsList])\n        setNewItemLoading(newItemLoading => false)\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems(arr) {\n        const comicsItems = arr.map((item, i) => {\n            return (\n                <li key={i} className=\"comics__item\">\n                    <Link to={`/comics/${item.id}`} href=\"#\">\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}$</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {comicsItems}\n            </ul>\n        )\n    }\n\n\n    const newSpinner = newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comics), newItemLoading)}\n            <button className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': comicsEnded ? 'none' : 'block'}}\n                    onClick={() => onRequest(offset)}>\n\n                <div className=\"inner\">load more</div>\n            </button>\n            {newSpinner}\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Marvel comics page\"\r\n                />\r\n                <title>Marvel comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}